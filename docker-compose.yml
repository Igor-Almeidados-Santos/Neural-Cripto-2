# ./docker-compose.yml
version: '3.8'

services:
  database:
    image: timescale/timescaledb:latest-pg14
    environment:
      - POSTGRES_USER=crypto_bot
      - POSTGRES_PASSWORD=crypto_bot_password
      - POSTGRES_DB=crypto_trading
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U crypto_bot -d crypto_trading"]
      interval: 10s
      timeout: 5s
      retries: 5
      
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      
  kafka:
    image: confluentinc/cp-kafka:7.4.0
    ports:
      - "9092:9092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
    depends_on:
      - zookeeper
      
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_TICK_TIME=2000
    ports:
      - "2181:2181"
      
  collector:
    build:
      context: .
      dockerfile: deployment/docker/Dockerfile.collector
    depends_on:
      - database
      - redis
      - kafka
    volumes:
      - ./src:/app/src
    environment:
      - DATABASE_URL=postgresql://crypto_bot:crypto_bot_password@database:5432/crypto_trading
      - REDIS_URL=redis://redis:6379/0
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      
  execution:
    build:
      context: .
      dockerfile: deployment/docker/Dockerfile.execution
    depends_on:
      - database
      - redis
      - kafka
    volumes:
      - ./src:/app/src
    environment:
      - DATABASE_URL=postgresql://crypto_bot:crypto_bot_password@database:5432/crypto_trading
      - REDIS_URL=redis://redis:6379/0
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      
  api:
    build:
      context: .
      dockerfile: deployment/docker/Dockerfile.api
    depends_on:
      - database
      - redis
    volumes:
      - ./src:/app/src
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://crypto_bot:crypto_bot_password@database:5432/crypto_trading
      - REDIS_URL=redis://redis:6379/0
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      
  prometheus:
    image: prom/prometheus:v2.43.0
    volumes:
      - ./deployment/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
      
  grafana:
    image: grafana/grafana:9.5.1
    volumes:
      - grafana_data:/var/lib/grafana
      - ./deployment/grafana/dashboards:/etc/grafana/dashboards
      - ./deployment/grafana/provisioning:/etc/grafana/provisioning
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
      
volumes:
  postgres_data:
  redis_data:
  grafana_data: